package com.amecfw.sage.model;

import com.amecfw.sage.persistence.DaoSession;
import de.greenrobot.dao.DaoException;

import com.amecfw.sage.persistence.CoordinateDao;
import com.amecfw.sage.persistence.LocationDao;

// THIS CODE IS GENERATED BY greenDAO, EDIT ONLY INSIDE THE "KEEP"-SECTIONS

// KEEP INCLUDES - put your custom includes here
import java.util.UUID;
import java.io.IOException;
import org.xmlpull.v1.XmlPullParser;
import org.xmlpull.v1.XmlPullParserException;
import org.xmlpull.v1.XmlSerializer;
// KEEP INCLUDES END
/**
 * Entity mapped to table COORDINATE.
 */
public class Coordinate extends EntityBase  implements UUIDSupport {

    private Long id;
    /** Not-null value. */
    private String rowGuid;
    private Double latitude;
    private Double longitude;
    private Double elevation;
    private Float accuracy;
    private Long time;
    private Float speed;
    private Float bearing;
    private String featureType;
    private Long locationID;

    /** Used to resolve relations */
    private transient DaoSession daoSession;

    /** Used for active entity operations. */
    private transient CoordinateDao myDao;

    private Location location;
    private Long location__resolvedKey;


    // KEEP FIELDS - put your custom fields here
    // KEEP FIELDS END

    public Coordinate() {
    }

    public Coordinate(Long id) {
        this.id = id;
    }

    public Coordinate(Long id, String rowGuid, Double latitude, Double longitude, Double elevation, Float accuracy, Long time, Float speed, Float bearing, String featureType, Long locationID) {
        this.id = id;
        this.rowGuid = rowGuid;
        this.latitude = latitude;
        this.longitude = longitude;
        this.elevation = elevation;
        this.accuracy = accuracy;
        this.time = time;
        this.speed = speed;
        this.bearing = bearing;
        this.featureType = featureType;
        this.locationID = locationID;
    }

    /** called by internal mechanisms, do not call yourself. */
    public void __setDaoSession(DaoSession daoSession) {
        this.daoSession = daoSession;
        myDao = daoSession != null ? daoSession.getCoordinateDao() : null;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    /** Not-null value. */
    public String getRowGuid() {
        return rowGuid;
    }

    /** Not-null value; ensure this value is available before it is saved to the database. */
    public void setRowGuid(String rowGuid) {
        this.rowGuid = rowGuid;
    }

    public Double getLatitude() {
        return latitude;
    }

    public void setLatitude(Double latitude) {
        this.latitude = latitude;
    }

    public Double getLongitude() {
        return longitude;
    }

    public void setLongitude(Double longitude) {
        this.longitude = longitude;
    }

    public Double getElevation() {
        return elevation;
    }

    public void setElevation(Double elevation) {
        this.elevation = elevation;
    }

    public Float getAccuracy() {
        return accuracy;
    }

    public void setAccuracy(Float accuracy) {
        this.accuracy = accuracy;
    }

    public Long getTime() {
        return time;
    }

    public void setTime(Long time) {
        this.time = time;
    }

    public Float getSpeed() {
        return speed;
    }

    public void setSpeed(Float speed) {
        this.speed = speed;
    }

    public Float getBearing() {
        return bearing;
    }

    public void setBearing(Float bearing) {
        this.bearing = bearing;
    }

    public String getFeatureType() {
        return featureType;
    }

    public void setFeatureType(String featureType) {
        this.featureType = featureType;
    }

    public Long getLocationID() {
        return locationID;
    }

    public void setLocationID(Long locationID) {
        this.locationID = locationID;
    }

    /** To-one relationship, resolved on first access. */
    public Location getLocation() {
        Long __key = this.locationID;
        if (location__resolvedKey == null || !location__resolvedKey.equals(__key)) {
            if (daoSession == null) {
                throw new DaoException("Entity is detached from DAO context");
            }
            LocationDao targetDao = daoSession.getLocationDao();
            Location locationNew = targetDao.load(__key);
            synchronized (this) {
                location = locationNew;
            	location__resolvedKey = __key;
            }
        }
        return location;
    }

    public void setLocation(Location location) {
        synchronized (this) {
            this.location = location;
            locationID = location == null ? null : location.getId();
            location__resolvedKey = locationID;
        }
    }

    /** Convenient call for {@link AbstractDao#delete(Object)}. Entity must attached to an entity context. */
    public void delete() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.delete(this);
    }

    /** Convenient call for {@link AbstractDao#update(Object)}. Entity must attached to an entity context. */
    public void update() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.update(this);
    }

    /** Convenient call for {@link AbstractDao#refresh(Object)}. Entity must attached to an entity context. */
    public void refresh() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.refresh(this);
    }

    // KEEP METHODS - put your custom methods here
    @Override
	public UUID getUUID() {
    	return uuidFromString(rowGuid);
	}

	@Override
	public void setUUID(UUID rowGuid) {
		this.rowGuid = uuidFromUUID(rowGuid); 
		
	}

	@Override
	public void generateUUID() {
		rowGuid = UUID.randomUUID().toString();
	}
	
	/**
	 * Generates a new id by calling generateUUID()
	 * @see com.amecfw.sage.model.UUIDSupport#setRowGuid()
	 */
	@Override
	public void setRowGuid(){
		generateUUID();
	}
    
    @Override
	public void fromXml(XmlPullParser parser) throws XmlPullParserException,
			IOException {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void toXml(XmlSerializer serializer) throws XmlPullParserException,
			IOException {
		// TODO Auto-generated method stub
		
	}
    // KEEP METHODS END

}
